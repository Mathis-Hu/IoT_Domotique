services:
  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - C:/Users/zaoua/Documents/IoT/volumes/mongo-data:/data/db
    restart: unless-stopped
    networks:
      - iot_network

  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: mosquitto
    ports:
      - "8883:8883"
      - "9001:9001"
    volumes:
      - ./mosquitto:/mosquitto/config
      - ./mosquitto/certs:/etc/mosquitto/certs
      - C:/Users/zaoua/Documents/IoT/volumes/mosquitto-data:/mosquitto/data
      - C:/Users/zaoua/Documents/IoT/volumes/mosquitto-logs:/mosquitto/log
    restart: unless-stopped
    networks:
      iot_network:
        ipv4_address: 192.168.2.10

  bridge:
    build: ./bridge
    container_name: mqtt_to_mongo_bridge
    depends_on:
      - mongo
      - mosquitto
    restart: unless-stopped
    volumes:
      - ./bridge/certs:/app/certs
    networks:
      - iot_network

  api:
    build: ./api
    container_name: api
    depends_on:
      - mongo
      - mosquitto
    environment:
      - BROKER_URL=mqtt://192.168.2.10:8883
      - MONGO_URI=mongodb://mongo:27017
    ports:
      - "3000:3000"
      - "3001:3001"
    restart: unless-stopped
    networks:
      - iot_network

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "80:80"
    depends_on:
      - api
    networks:
      - iot_network
    restart: unless-stopped

  interior_temperature_sensor:
    build: ./sensors/interior_temperature_sensor
    depends_on:
      - bridge
    volumes:
      - ./sensors/interior_temperature_sensor/certs:/app/certs
    restart: unless-stopped
    networks:
      - iot_network
    deploy:
      replicas: 3

  exterior_temperature_sensor:
    build: ./sensors/exterior_temperature_sensor
    depends_on:
      - bridge
    volumes:
      - ./sensors/exterior_temperature_sensor/certs:/app/certs
    restart: unless-stopped
    networks:
      - iot_network
    deploy:
      replicas: 1

  humidity_sensor:
    build: ./sensors/humidity_sensor
    depends_on:
      - bridge
    volumes:
      - ./sensors/humidity_sensor/certs:/app/certs
    restart: unless-stopped
    networks:
      - iot_network
    deploy:
      replicas: 1

  electric_current_sensor:
    build: ./sensors/electric_current_sensor
    depends_on:
      - bridge
    volumes:
      - ./sensors/electric_current_sensor/certs:/app/certs
    restart: unless-stopped
    networks:
      - iot_network
    deploy:
      replicas: 2

  air_quality_sensor:
    build: ./sensors/air_quality_sensor
    depends_on:
      - bridge
    volumes:
      - ./sensors/air_quality_sensor/certs:/app/certs
    restart: unless-stopped
    networks:
      - iot_network
    deploy:
      replicas: 1

  movement_sensor:
    build: ./sensors/movement_sensor
    depends_on:
      - bridge
    volumes:
      - ./sensors/movement_sensor/certs:/app/certs
    restart: unless-stopped
    networks:
      - iot_network
    deploy:
      replicas: 1

  shutters_sensor:
    build: ./sensors/shutters_sensor
    depends_on:
      - bridge
    volumes:
      - ./sensors/shutters_sensor/certs:/app/certs
    restart: unless-stopped
    networks:
      - iot_network
    deploy:
      replicas: 1

  light_bulb_sensor:
    build: ./sensors/light_bulb_sensor
    depends_on:
      - bridge
    volumes:
      - ./sensors/light_bulb_sensor/certs:/app/certs
    restart: unless-stopped
    networks:
      - iot_network
    deploy:
      replicas: 1

networks:
  iot_network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.2.0/24